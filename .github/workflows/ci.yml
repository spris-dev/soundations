name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Setup docker builder image
    - name: Docker builder cache
      id: docker-builder-cache
      uses: actions/cache@v3
      with:
        path: docker-builder-cache
        key: ${{ runner.os }}-docker-builder-cache-${{ hashFiles('Dockerfile.builder') }}

    - name: Build docker builder image
      if: steps.docker-builder-cache.outputs.cache-hit != 'true'
      run: ./bin/build-docker-builder.sh && ./bin/save-docker-builder.sh > docker-builder-cache

    - name: Load docker builder image
      if: steps.docker-builder-cache.outputs.cache-hit == 'true'
      run: docker load < docker-builder-cache


    # Setup python dependencies
    - name: Python deps cache
      id: python-deps-cache
      uses: actions/cache@v3
      with:
        path: python-deps-cache
        key: ${{ runner.os }}-python-deps-cache-${{ hashFiles('Dockerfile.builder', 'poetry.lock') }}

    - name: Install python deps
      if: steps.python-deps-cache.outputs.cache-hit != 'true'
      run: ./bin/docker-run.sh ./bin/install-python-deps.sh && cp -r .venv python-deps-cache

    - name: Load python deps
      if: steps.python-deps-cache.outputs.cache-hit == 'true'
      run: cp -r python-deps-cache .venv


    # Setup nodejs dependencies
    - name: Node deps cache
      id: node-deps-cache
      uses: actions/cache@v3
      with:
        path: node-deps-cache
        key: ${{ runner.os }}-node-deps-cache-${{ hashFiles('Dockerfile.builder', '**/package-lock.json') }}

    - name: Install node deps
      if: steps.node-deps-cache.outputs.cache-hit != 'true'
      run: ./bin/docker-run.sh ./bin/install-node-deps.sh && cp -r node_modules node-deps-cache

    - name: Load node deps
      if: steps.node-deps-cache.outputs.cache-hit == 'true'
      run: cp -r node-deps-cache node_modules


    - name: Lint source code
      run: ./bin/docker-run.sh ./bin/lint.sh


    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        SND_MAIN_SERVER_KEY: ${{ secrets.SND_MAIN_SERVER_KEY }}
        SND_KNOWN_HOSTS: ${{ secrets.SND_KNOWN_HOSTS }}
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.SND_MAIN_SERVER_KEY }}"
        mkdir -p ~/.ssh
        echo "${{ secrets.SND_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: ./bin/deploy.sh
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        SND_MAIN_SERVER_HOST: ${{ secrets.SND_MAIN_SERVER_HOST }}
